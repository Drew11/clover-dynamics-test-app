{"version":3,"sources":["components/card/card.js","components/select/select.js","services/nasa-service.js","components/app.js","index.js"],"names":["useStyles","makeStyles","theme","root","minWidth","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","CardStyled","props","imageSrc","cameraName","earthDate","classes","Card","className","CardHeader","title","subheader","CardMedia","image","CardContent","Typography","variant","color","component","Link","href","target","formControl","spacing","selectEmpty","marginTop","SimpleSelect","name","callback","activeQuery","options","FormControl","InputLabel","id","Select","labelId","value","onChange","label","MenuItem","map","option","index","toLocaleLowerCase","key","apiKey","NasaService","url","getPhotos","rover","sol","a","length","console","log","fetch","promise","json","data","photos","LoadMoreButton","styled","Button","marginRight","inputSolDay","border","backgroundColor","grey","width","App","service","useState","setPhotos","activeRover","setActiveRover","activeCamera","setActiveCamera","activePhotos","setActivePhotos","setSol","optionsCameras","forEach","photo","includes","camera","push","getFilteredPhotos","filter","toLocaleUpperCase","useEffect","then","event","Input","placeholder","type","slice","img_src","earth_date","onClick","visiblePhotos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ee0a9a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 400,\r\n        margin: '0 0 20px 20px'\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n\r\n}));\r\n\r\nexport default function CardStyled( props ) {\r\n    const {\r\n        imageSrc,\r\n        cameraName,\r\n        earthDate\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                title={cameraName}\r\n                subheader={earthDate}\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={imageSrc}\r\n                title=\"Paella dish\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Full size photo follow the <Link href={imageSrc}\r\n                                                     target=\"_blank\"\r\n                >\r\n                    link</Link>\r\n                </Typography>\r\n            </CardContent>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n\r\n    const {\r\n        name,\r\n        callback,\r\n        activeQuery,\r\n        options\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">{name}</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={activeQuery}\r\n                    onChange={callback}\r\n                    label={name}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>{name === 'Rover'? 'None': 'All'}</em>\r\n                    </MenuItem>\r\n                    {\r\n                        options.map((option, index)=>\r\n                            <MenuItem\r\n                                value={option.toLocaleLowerCase()}\r\n                                key={index}\r\n                            >\r\n                                {option}</MenuItem>\r\n                        )\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","const apiKey = 'igzYcA993EHzsWqm4OZKEwIY1zVrCWa0nXGuq0J9';\r\n\r\nclass NasaService {\r\n    url ='https://api.nasa.gov/mars-photos/api/v1/';\r\n\r\n    getPhotos = async (rover, sol)=> {\r\n        if(!rover.length){\r\n            return\r\n        }\r\n        // if(camera.length){\r\n        //    camera = `&camera=${camera}`;\r\n        // }\r\n        console.log(this.url + `rovers/${rover}/photos?&sol=${sol}&api_key=`+apiKey)\r\n       const promise = await fetch(this.url + `rovers/${rover}/photos?&sol=${sol}&api_key=`+apiKey);\r\n       const data = await promise.json();\r\n       return data.photos;\r\n    }\r\n}\r\n\r\nexport default NasaService;","import React, {useState, useEffect} from 'react';\nimport CardStyled from './card/card';\nimport SimpleSelect from './select/select';\nimport NasaService from '../services/nasa-service';\nimport './app.css';\nimport {styled, makeStyles} from '@material-ui/core/styles';\nimport {grey} from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport {Input} from '@material-ui/core';\n\nconst LoadMoreButton = styled(Button)({});\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginRight: 40\n    },\n    inputSolDay: {\n        border: 'none',\n        backgroundColor: grey[300],\n        width: 50,\n        height: 20,\n        marginLeft: 10\n    },\n}));\n\nconst App = () => {\n\n    const classes = useStyles();\n    const service = new NasaService();\n    const [photos, setPhotos] = useState(null);\n    const [activeRover, setActiveRover] = useState('');\n    const [activeCamera, setActiveCamera] = useState('');\n    const [activePhotos, setActivePhotos] = useState(6);\n    const [sol, setSol] = useState(1);\n    const optionsRovers = ['Curiosity', 'Opportunity', 'Spirit'];\n    let optionsCameras = [];\n\n    if (photos) {\n        photos.forEach(photo => {\n            if (!optionsCameras.includes(photo.camera.name)) {\n                optionsCameras.push(photo.camera.name)\n            }\n        });\n    }\n\n    const getFilteredPhotos = () => {\n        if (activeCamera === '') {\n            return photos;\n        }\n        const filteredPhotos = photos.filter(photo => photo.camera.name === activeCamera.toLocaleUpperCase());\n        return filteredPhotos;\n    };\n\n\n    const setRover = (event) => {\n        setActiveRover(event.target.value);\n        setActiveCamera('');\n    };\n\n    const setCamera = (event) => {\n        setActiveCamera(event.target.value);\n    };\n\n    const getCardsPerLoad = () => {\n        return getFilteredPhotos().slice(0, activePhotos)\n    };\n\n    const pagination = () => {\n\n        if (activePhotos === photos.length) {\n            return\n        }\n\n        const visiblePhotos = activePhotos + 6;\n\n        if (visiblePhotos > photos.length) {\n            setActivePhotos(photos.length);\n            return;\n        }\n\n        setActivePhotos(visiblePhotos);\n    };\n\n    useEffect(function effectFunction() {\n            function fetch() {\n                service.getPhotos(activeRover, sol)\n                    .then(\n                        (photos) => {\n                            setPhotos(photos);\n                            setActiveCamera('');\n                            setActivePhotos(6);\n                        }\n                    );\n            }\n\n            fetch()\n        },\n        [activeRover, sol]);\n\n\n    return (\n        <div className=\"App\">\n            <header></header>\n\n            <div className=\"menu-container\">\n                <menu>\n                    <SimpleSelect\n                        name={\"Rover\"}\n                        callback={setRover}\n                        activeQuery={activeRover}\n                        options={optionsRovers}\n                    />\n\n                    <SimpleSelect\n                        name={\"Camera\"}\n                        callback={setCamera}\n                        activeQuery={activeCamera}\n                        options={optionsCameras}\n                    />\n                    <Input\n                        placeholder=\"solar day number\"\n                        value={sol}\n                        className={classes.inputSolDay}\n                        type={'number'}\n                        onChange={(event) => {\n                            if (event.target.value < 1 || event.target.value >= 1001) {\n                                return\n                            }\n                            setSol(event.target.value)\n                        }}\n                    />\n\n                </menu>\n            </div>\n\n            <main>\n\n                {photos && photos.length===0&& 'no photo in this day...'}\n\n                <div className=\"content-container\">\n                    {\n                        photos ? getCardsPerLoad().map(photo =>\n                            <CardStyled\n                                imageSrc={photo.img_src}\n                                cameraName={photo.camera.name}\n                                earthDate={photo.earth_date}\n                                key={photo.id}\n                            />\n                        ) : null\n                    }\n                </div>\n\n                {\n                    photos && activePhotos < getFilteredPhotos().length ? <LoadMoreButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={pagination}\n                    >\n                        Load more\n                    </LoadMoreButton> : null\n                }\n\n            </main>\n\n            <footer></footer>\n\n        </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}