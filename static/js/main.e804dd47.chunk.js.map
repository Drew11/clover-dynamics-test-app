{"version":3,"sources":["components/card/card.js","components/select/select.js","services/nasa-service.js","components/app.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","marginLeft","marginTop","media","height","MediaCard","imageSrc","cameraName","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","theme","formControl","margin","spacing","minWidth","selectEmpty","SimpleSelect","props","name","callback","activeQuery","options","FormControl","InputLabel","id","Select","labelId","value","onChange","label","MenuItem","map","option","toLocaleLowerCase","NasaService","url","getPhotos","rover","camera","a","length","fetch","promise","json","data","photos","ColorButton","withStyles","palette","getContrastText","purple","backgroundColor","Button","marginRight","App","service","useState","setPhotos","activeRover","setActiveRover","activeCamera","setActiveCamera","activePhotos","setActivePhotos","optionsCameras","forEach","photo","includes","push","getFilteredPhotos","filter","toLocaleUpperCase","useEffect","then","console","log","event","target","type","slice","img_src","key","onClick","photosPerLoad","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e804dd47.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 400,\r\n        marginLeft: 20,\r\n        marginTop: 20\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nexport default function MediaCard({imageSrc, cameraName}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={imageSrc}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h3\">\r\n                        {cameraName}\r\n                    </Typography>\r\n                    <Typography variant=\"body3\" color=\"textSecondary\" component=\"p\">\r\n                        Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                        across all continents except Antarctica\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n\r\n    const {name, callback, activeQuery, options } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">{name}</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={activeQuery}\r\n                    onChange={callback}\r\n                    label={name}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>{name === 'Rover'? 'None': 'All'}</em>\r\n                    </MenuItem>\r\n                    {\r\n                        options.map(option=>\r\n                            <MenuItem value={option.toLocaleLowerCase()}>{option}</MenuItem>\r\n                        )\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","const apiKey = 'igzYcA993EHzsWqm4OZKEwIY1zVrCWa0nXGuq0J9';\r\n\r\nclass NasaService {\r\n    url ='https://api.nasa.gov/mars-photos/api/v1/';\r\n\r\n    getPhotos = async (rover, camera)=> {\r\n        if(!rover.length){\r\n            return\r\n        }\r\n        // if(camera.length){\r\n        //    camera = `&camera=${camera}`;\r\n        // }\r\n       const promise = await fetch(this.url + `rovers/${rover}/photos?&sol=1000${camera}&api_key=`+apiKey);\r\n       const data = await promise.json();\r\n       return data.photos;\r\n    }\r\n}\r\n\r\nexport default NasaService;","import React, {useState, useEffect} from 'react';\nimport MediaCard from './card/card';\nimport SimpleSelect from './select/select';\nimport NasaService from '../services/nasa-service';\nimport './app.css';\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText(purple[500]),\n        backgroundColor: purple[500],\n        '&:hover': {\n            backgroundColor: purple[700],\n        },\n    },\n}))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginRight: 40\n    },\n}));\n\nconst App = ()=> {\n  const classes = useStyles();\n\n  const service = new NasaService();\n\n  const [photos, setPhotos] = useState(null);\n  const [activeRover, setActiveRover] = useState('');\n  const [activeCamera, setActiveCamera] = useState('');\n  const [activePhotos, setActivePhotos] = useState(6);\n\n  const [sol, setSol] = useState(0);\n\n\n  const optionsRovers = ['Curiosity', 'Opportunity', 'Spirit'];\n\n  let optionsCameras = [];\n\n  if(photos){\n      photos.forEach(photo=>{\n          if(!optionsCameras.includes(photo.camera.name)){\n              optionsCameras.push(photo.camera.name)\n          }\n      });\n  }\n\n  const getFilteredPhotos=()=>{\n      if(activeCamera===''){\n          return photos;\n      }\n\n\n      const filteredPhotos = photos.filter(photo=>photo.camera.name === activeCamera.toLocaleUpperCase());\n      return filteredPhotos;\n  };\n\n\n  const setRover = (event)=> {\n    setActiveRover(event.target.value);\n    setActiveCamera('');\n  };\n\n  const setCamera = (event)=> {\n    setActiveCamera(event.target.value);\n };\n\n  const getCardsPerLoad = ()=>{\n      console.log(getFilteredPhotos().slice(0, activePhotos));\n\n     return getFilteredPhotos().slice(0, activePhotos)\n  };\n\n  const pagination = ()=>{\n\n      let photosPerLoad = activePhotos + 6;\n\n      if(photosPerLoad*6 === photos.length) return;\n\n      if(photosPerLoad*6 > photos.length){\n          photosPerLoad = photos.length;\n      }\n\n      setActivePhotos(photosPerLoad);\n  };\n\n  useEffect(function effectFunction() {\n      function fetch() {\n          service.getPhotos(activeRover)\n              .then((photos)=>setPhotos(photos));\n      }\n      fetch()},\n  [activeRover]);\n\n  console.log(photos, activePhotos)\n\n      return (\n          <div className=\"App\">\n              <header></header>\n\n              <div className=\"menu-container\">\n                  <menu>\n                      <SimpleSelect\n                          name={\"Rover\"}\n                          callback={setRover}\n                          activeQuery={activeRover}\n                          options={optionsRovers}\n                      />\n\n                      <SimpleSelect\n                          name={\"Camera\"}\n                          callback={setCamera}\n                          activeQuery={activeCamera}\n                          options={optionsCameras}\n                      />\n\n                      <input type=\"number\"\n\n                      />\n                  </menu>\n              </div>\n              {\n                  photos ?\n                      <div>\n                          {activePhotos + ' from ' + photos.length }\n                      </div>:\n                      null\n              }\n\n\n              <main>\n                  <div className=\"content-container\">\n                      {\n                          photos? getCardsPerLoad().map(photo=>\n                              <MediaCard\n                                  imageSrc={photo.img_src}\n                                  cameraName={photo.camera.name}\n                                  key={photo.id}\n                              />\n                          ): null\n                      }\n\n\n                  </div>\n\n                  <div className=\"btn-container\">\n                      {\n                          photos && activePhotos < photos.length ? <ColorButton\n                              variant=\"contained\"\n                              color=\"primary\"\n                              className={classes.margin}\n                              onClick={pagination}\n                          >\n                              Load more\n                          </ColorButton>: null\n                      }\n                  </div>\n\n              </main>\n          </div>\n      )\n\n\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}